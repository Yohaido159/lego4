{"version":3,"sources":["components/AdminMain/AdminMain.jsx"],"names":["useStyles","makeStyles","theme","main","backgroundColor","height","width","paper","justifyContent","alignItems","palette","primary","light","color","secondary","tab","tabPanel","display","btn","btnHead","TabPanel","props","children","value","index","classes","hidden","className","p","Alert","autoHideDuration","elevation","variant","AdminMain","dispatch","useDispatch","newUsers","useSelector","state","users_main","oldUsers","open","OpenSnack","errMsg","React","useState","valueForLable","setValueForLable","useEffect","password","prompt","checkPassword","fetchUsersFormApiStart","position","disableRipple","disableElevation","style","fontSize","component","Link","to","onChange","event","newValue","indicatorColor","textColor","centered","label","Paper","align","map","row","hover","role","tabIndex","key","uuid","type_send","Fragment","onClick","ChangeNameToGive","sendToAPI","removeFromAllNewUserDetailById","id","itemQuantity","item","city","street","num_home","phone","email","name","sticker","target","href","rel","onClose","handleClose","severity"],"mappings":"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","file":"static/js/4.b2ed6574.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchUsersFormApiStart, setOpenSnack, removeFromAllNewUserDetailById } from \"../../redux/users/users.actions\";\r\nimport { ChangeNameToGive, sendToAPI, handleClose } from \"../../redux/users/users.utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport \"./AdminMain.styles.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n  paper: {\r\n    height: \"75%\",\r\n    width: \"60%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n\r\n  tab: {\r\n    ...theme.tab,\r\n  },\r\n  tabPanel: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  btn: {\r\n    width: \"20vw\",\r\n    height: \"50px\",\r\n  },\r\n  btnHead: {\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst makeArrSimpleEmpty = (arr) => {\r\n  let newArr = [];\r\n  newArr = arr.map((entity) => {\r\n    return { name: entity.Customers_FullName[0], id: entity.ID };\r\n  });\r\n\r\n  return newArr;\r\n};\r\n\r\nconst AdminMain = (props) => {\r\n  const dispatch = useDispatch();\r\n  const newUsers = useSelector((state) => state.users_main.newUsers);\r\n  const oldUsers = useSelector((state) => state.users_main.oldUsers);\r\n  const open = useSelector((state) => state.users_main.OpenSnack);\r\n  const errMsg = useSelector((state) => state.users_main.errMsg);\r\n\r\n  /* Styles */\r\n  const classes = useStyles();\r\n\r\n  const [valueForLable, setValueForLable] = React.useState(0);\r\n  /*         */\r\n\r\n  const checkPassword = () => {\r\n    let password;\r\n    while (password !== \"lirons\") {\r\n      //console.log(\"start\");\r\n      password = prompt(\"type password\");\r\n      //console.log(\"greate\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPassword();\r\n    dispatch(fetchUsersFormApiStart());\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValueForLable(newValue);\r\n  };\r\n\r\n  const fakeUser = [\r\n    {\r\n      city: \"בית אל\",\r\n      id: 68627396,\r\n      item: \"בדיקה\",\r\n      name: \"יוחאי\",\r\n      num_home: \"3\",\r\n      phone: \"0549410031\",\r\n      street: \"sufa street\",\r\n      type_send: \"משלוח עד הבית\",\r\n    },\r\n    {\r\n      city: \"בית אל\",\r\n      id: 68627901,\r\n      item: \"בדיקה\",\r\n      name: \"הי\",\r\n      num_home: \"5\",\r\n      phone: \"0549410031\",\r\n      street: \"יותם\",\r\n      type_send: \"משלוח ללוקר\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {oldUsers !== null && newUsers !== null ? (\r\n        <>\r\n          <AppBar position=\"static\">\r\n            <Toolbar className=\"d-flex justify-content-center\">\r\n              <Button\r\n                className={classes.btnHead}\r\n                disableRipple\r\n                disableElevation\r\n                variant=\"outlined\"\r\n                style={{ fontSize: \"1rem\", width: \"13rem\", height: \"3rem\" }}\r\n                component={Link}\r\n                to=\"/\"\r\n              >\r\n                חזרה לאתר\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={`admin-main ${classes.main}`}>\r\n            <Paper className={classes.paper}>\r\n              <Tabs\r\n                value={valueForLable}\r\n                onChange={handleChange}\r\n                indicatorColor=\"secondary\"\r\n                textColor=\"secondary\"\r\n                centered\r\n                variant=\"fullWidth\"\r\n              >\r\n                <Tab className={classes.tab} label=\"הועבר המידע לחברת משלוחים\" />\r\n                <Tab className={classes.tab} label=\"קנו וצריך לשלוח רגיל\" />\r\n              </Tabs>\r\n              <TabPanel value={valueForLable} index={1}>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell align=\"right\">צפה במדבקה</TableCell>\r\n                        <TableCell align=\"right\">סוג משלוח</TableCell>\r\n                        <TableCell align=\"right\">כמות</TableCell>\r\n                        <TableCell align=\"right\">פריט</TableCell>\r\n                        <TableCell align=\"right\">עיר</TableCell>\r\n                        <TableCell align=\"right\">רחוב</TableCell>\r\n                        <TableCell align=\"right\">מס בית</TableCell>\r\n                        <TableCell align=\"right\">פלאפון</TableCell>\r\n                        <TableCell align=\"right\">איימיל</TableCell>\r\n                        <TableCell align=\"right\">שם</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {newUsers?.map((row) => (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={uuid()}>\r\n                          <TableCell align=\"right\">\r\n                            {row.type_send !== \"איסוף עצמי\" && row.type_send !== \"משלוח ללוקר\" ? (\r\n                              <React.Fragment>\r\n                                <Button variant=\"contained\" onClick={() => ChangeNameToGive(row, row.type_send)}>\r\n                                  צפה במדבקה\r\n                                </Button>\r\n                                {errMsg && (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() => {\r\n                                      sendToAPI(row);\r\n                                      dispatch(removeFromAllNewUserDetailById(row.id));\r\n                                    }}\r\n                                  >\r\n                                    להעביר לשולם\r\n                                  </Button>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ) : (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => {\r\n                                  sendToAPI(row);\r\n                                  dispatch(removeFromAllNewUserDetailById(row.id));\r\n                                }}\r\n                              >\r\n                                העבר לשולם\r\n                              </Button>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row?.type_send}</TableCell>\r\n                          <TableCell align=\"right\">{row?.itemQuantity}</TableCell>\r\n                          <TableCell align=\"right\">{row?.item}</TableCell>\r\n                          <TableCell align=\"right\">{row.city}</TableCell>\r\n                          <TableCell align=\"right\">{row.street}</TableCell>\r\n                          <TableCell align=\"right\">{row.num_home}</TableCell>\r\n                          <TableCell align=\"right\">{row.phone}</TableCell>\r\n                          <TableCell align=\"right\">{row.email}</TableCell>\r\n                          <TableCell align=\"right\">{row.name}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </TabPanel>\r\n              <TabPanel value={valueForLable} index={0}>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell align=\"right\">צפה במדבקה</TableCell>\r\n                        <TableCell align=\"right\">סוג משלוח</TableCell>\r\n                        <TableCell align=\"right\">כמות</TableCell>\r\n                        <TableCell align=\"right\">שם המוצר</TableCell>\r\n                        <TableCell align=\"right\">עיר</TableCell>\r\n                        <TableCell align=\"right\">רחוב</TableCell>\r\n                        <TableCell align=\"right\">מס בית</TableCell>\r\n                        <TableCell align=\"right\">פלאפון</TableCell>\r\n                        <TableCell align=\"right\">איימיל</TableCell>\r\n                        <TableCell align=\"right\">שם</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {oldUsers.map((row) => (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={uuid()}>\r\n                          <TableCell align=\"right\">\r\n                            {row?.sticker !== \"ריק\" ? (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                component={\"a\"}\r\n                                target=\"_blank\"\r\n                                href={`https://run.hfd.co.il/RunCom.Server/Request.aspx?APPNAME=run&PRGNAME=ship_print_ws&ARGUMENTS=-N${row?.sticker}`}\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                צפה במדבקה שכבר נקלטה\r\n                              </Button>\r\n                            ) : (\r\n                              \"----\"\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row?.type_send}</TableCell>\r\n                          <TableCell align=\"right\">{row?.itemQuantity}</TableCell>\r\n                          <TableCell align=\"right\">{row?.item}</TableCell>\r\n                          <TableCell align=\"right\">{row?.city}</TableCell>\r\n                          <TableCell align=\"right\">{row?.street}</TableCell>\r\n                          <TableCell align=\"right\">{row?.num_home}</TableCell>\r\n                          <TableCell align=\"right\">{row?.phone}</TableCell>\r\n                          <TableCell align=\"right\">{row?.email}</TableCell>\r\n                          <TableCell align=\"right\">{row?.name}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </TabPanel>\r\n\r\n              {valueForLable === 1 && (\r\n                <Box className=\"d-flex flex-column align-items-center\">\r\n                  <Typography className=\"mb-3 admin\">להעביר את המידע לחברת המשלוחים</Typography>\r\n                  {errMsg && (\r\n                    <>\r\n                      <Typography className=\"mb-3 admin\">שגיאה</Typography> <br />\r\n                      <p className=\"black\"> {errMsg} </p>\r\n                    </>\r\n                  )}\r\n                </Box>\r\n              )}\r\n              {valueForLable === 0 && (\r\n                <Box className=\"d-flex flex-column align-items-center\">\r\n                  <Typography className=\"mb-3 admin\">חברת המשלוחים אספה את ההזמנות</Typography>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n          </div>\r\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              אנא המתן עד שתועבר לדף\r\n            </Alert>\r\n          </Snackbar>\r\n        </>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMain;\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div hidden={value !== index}>\r\n      {value === index && (\r\n        <Box className={classes.tabPanel} p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert autoHideDuration={300} elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n"],"sourceRoot":""}